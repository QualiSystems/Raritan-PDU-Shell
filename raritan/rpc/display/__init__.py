# Do NOT edit this file!
# It was generated by IdlC class idl.json.python.ProxyAsnVisitor.

#
# Section generated from "/home/nb/builds/MEGA/px2-3.1.x-branch-20150209-none-release-none-pdu-raritan/fwcomponents/mkdist/tmp/px2_final/libidl_client/display/idl/DisplayControl.idl"
#

import raritan.rpc
from raritan.rpc import Interface, Structure, ValueObject, Enumeration, typecheck, DecodeException
import raritan.rpc.display


# interface
class DisplayControl(Interface):
    idlType = "display.DisplayControl:1.0.0"

    SUCCESS = 0

    ERR_INVALID_VALUE = 1

    # structure
    class DefaultViewItem(Structure):
        idlType = "display.DisplayControl.DefaultViewItem:1.0.0"
        elements = ["id", "description"]

        def __init__(self, id, description):
            typecheck.is_string(id, AssertionError)
            typecheck.is_string(description, AssertionError)

            self.id = id
            self.description = description

        @classmethod
        def decode(cls, json, agent):
            obj = cls(
                id = json['id'],
                description = json['description'],
            )
            return obj

        def encode(self):
            json = {}
            json['id'] = self.id
            json['description'] = self.description
            return json

    def getAvailableDefaultViews(self):
        agent = self.agent
        args = {}
        rsp = agent.json_rpc(self.target, 'getAvailableDefaultViews', args)
        _ret_ = [raritan.rpc.display.DisplayControl.DefaultViewItem.decode(x0, agent) for x0 in rsp['_ret_']]
        for x0 in _ret_:
            typecheck.is_struct(x0, raritan.rpc.display.DisplayControl.DefaultViewItem, DecodeException)
        return _ret_

    def getDefaultView(self):
        agent = self.agent
        args = {}
        rsp = agent.json_rpc(self.target, 'getDefaultView', args)
        _ret_ = rsp['_ret_']
        typecheck.is_string(_ret_, DecodeException)
        return _ret_

    def setDefaultView(self, id):
        agent = self.agent
        typecheck.is_string(id, AssertionError)
        args = {}
        args['id'] = id
        rsp = agent.json_rpc(self.target, 'setDefaultView', args)
        _ret_ = rsp['_ret_']
        typecheck.is_int(_ret_, DecodeException)
        return _ret_
